"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[3164],{5989:function(e,t,a){a.r(t),a.d(t,{assets:function(){return b},contentTitle:function(){return k},default:function(){return y},frontMatter:function(){return h},metadata:function(){return v},toc:function(){return N}});var n=a(7462),l=a(3366),r=a(7294),i=a(3905),o=a(2389),s=a(5979),u=a(6010),d="tabItem_LplD";function p(e){var t,a,l,i=e.lazy,o=e.block,p=e.defaultValue,c=e.values,m=e.groupId,g=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=c?c:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,s.lx)(k,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===p?p:null!=(t=null!=p?p:null==(a=h.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(l=h[0])?void 0:l.props.value;if(null!==b&&!k.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.UB)(),f=N.tabGroupChoices,y=N.setTabGroupChoices,w=(0,r.useState)(b),x=w[0],T=w[1],C=[],z=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var S=f[m];null!=S&&S!==x&&k.some((function(e){return e.value===S}))&&T(S)}var _=function(e){var t=e.currentTarget,a=C.indexOf(t),n=k[a].value;n!==x&&(z(t),T(n),null!=m&&y(m,n))},G=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=C.indexOf(e.currentTarget)+1;a=C[n]||C[0];break;case"ArrowLeft":var l=C.indexOf(e.currentTarget)-1;a=C[l]||C[C.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":o},g)},k.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:function(e){return C.push(e)},onKeyDown:G,onFocus:_,onClick:_},l,{className:(0,u.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":x===t})}),null!=a?a:t)}))),i?(0,r.cloneElement)(h.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function c(e){var t=(0,o.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}function m(e){var t=e.children,a=e.hidden,n=e.className;return r.createElement("div",{role:"tabpanel",hidden:a,className:n},t)}a(8066);var g=["components"],h={sidebar_label:"Setting Up",sidebar_position:1},k="Setting Up Gear Node",v={unversionedId:"node/setting-up",id:"node/setting-up",title:"Setting Up Gear Node",description:"Introduction",source:"@site/docs/node/setting-up.mdx",sourceDirName:"node",slug:"/node/setting-up",permalink:"/node/setting-up",editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/node/setting-up.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Setting Up",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Receive GRB",permalink:"/idea/account/gear-bonus"},next:{title:"Node as a Service",permalink:"/node/node-as-service"}},b={},N=[{value:"Introduction",id:"introduction",level:2},{value:"Install with pre-build binary",id:"install-with-pre-build-binary",level:2},{value:"Compile Gear node by yourself",id:"compile-gear-node-by-yourself",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Install Rust:",id:"install-rust",level:3},{value:"Install WASM Toolchains:",id:"install-wasm-toolchains",level:3},{value:"Clone Gear repo",id:"clone-gear-repo",level:3},{value:"Compile",id:"compile",level:3},{value:"Run Gear Node",id:"run-gear-node",level:2},{value:"Command Flags and Options",id:"command-flags-and-options",level:2},{value:"Special environment variables",id:"special-environment-variables",level:2}],f={toc:N};function y(e){var t=e.components,a=(0,l.Z)(e,g);return(0,i.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"setting-up-gear-node"},"Setting Up Gear Node"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"This guide covers the steps required to install and run the Gear node."),(0,i.kt)("p",null,"There are two ways to get started with the Gear node. First, you can download a pre-built binary file and run it, or second, you can compile the binary file and configure it by yourself. Using a ready-made build is a quick and convenient way to get started as you can skip the installation of Rust and all its dependencies and you can also skip the node compiling process. On the other hand, if you decide that you want to go through the process of creating your development node, it may take about twenty minutes or more depending on your hardware."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("h3",{parentName:"div",id:"system-requirements"},"System requirements"),(0,i.kt)("p",{parentName:"div"},"Gear node doesn't have any special hardware requirements excepting SSD."))),(0,i.kt)("h2",{id:"install-with-pre-build-binary"},"Install with pre-build binary"),(0,i.kt)("p",null,"Depending on your OS you need to download nightly build of Gear node:"),(0,i.kt)(c,{mdxType:"Tabs"},(0,i.kt)(m,{value:"win64",label:"Windows x64",className:"unique-tabs",default:!0,mdxType:"TabItem"},(0,i.kt)("p",null,"Terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl -O https://builds.gear.rs/gear-nightly-windows-x86_64.zip\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Windows x64"),": ",(0,i.kt)("a",{parentName:"p",href:"https://builds.gear.rs/gear-nightly-windows-x86_64.zip"},"gear-nightly-windows-x86_64.zip"))),(0,i.kt)(m,{value:"mac-arm",label:"MacOS ARM",mdxType:"TabItem"},(0,i.kt)("p",null,"Terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://builds.gear.rs/gear-nightly-macos-m1.tar.gz && \\\ntar xvf gear-nightly-macos-m1.tar.gz && \\\nrm gear-nightly-macos-m1.tar.gz && \\\nchmod +x gear-node\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"macOS M1"),": ",(0,i.kt)("a",{parentName:"p",href:"https://builds.gear.rs/gear-nightly-macos-m1.tar.gz"},"gear-nightly-macos-m1.tar.gz"))),(0,i.kt)(m,{value:"mac-intel",label:"MacOS x64",mdxType:"TabItem"},(0,i.kt)("p",null,"Terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://builds.gear.rs/gear-nightly-macos-x86_64.tar.gz && \\\ntar xvf gear-nightly-macos-x86_64.tar.gz && \\\nrm gear-nightly-macos-x86_64.tar.gz && \\\nchmod +x gear-node\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"macOS Intel x64"),": ",(0,i.kt)("a",{parentName:"p",href:"https://builds.gear.rs/gear-nightly-macos-x86_64.tar.gz"},"gear-nightly-macos-x86_64.tar.gz"))),(0,i.kt)(m,{value:"mac-linux",label:"Linux x64",mdxType:"TabItem"},(0,i.kt)("p",null,"Terminal:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://builds.gear.rs/gear-nightly-linux-x86_64.tar.xz && \\\ntar xvf gear-nightly-linux-x86_64.tar.xz && \\\nrm gear-nightly-linux-x86_64.tar.xz && \\\nchmod +x gear-node\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Linux x64"),": ",(0,i.kt)("a",{parentName:"p",href:"https://builds.gear.rs/gear-nightly-linux-x86_64.tar.xz"},"gear-nightly-linux-x86_64.tar.xz")))),(0,i.kt)("h2",{id:"compile-gear-node-by-yourself"},"Compile Gear node by yourself"),(0,i.kt)("p",null,"Compiling the build will take some time and requires the installation of some dependencies:"),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"Linux users should generally install ",(0,i.kt)("inlineCode",{parentName:"p"},"GCC")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Clang"),", according to their distribution\u2019s documentation."),(0,i.kt)("p",null,"For example, on Ubuntu use:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install -y clang build-essential\n")),(0,i.kt)("p",null,"On macOS, you can get a C compiler by running:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ xcode-select --install\n")),(0,i.kt)("h3",{id:"install-rust"},"Install Rust:"),(0,i.kt)("p",null,"If you already have Rust installed, you can skip this step."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n")),(0,i.kt)("p",null,"And then you should reboot your terminal."),(0,i.kt)("h3",{id:"install-wasm-toolchains"},"Install WASM Toolchains:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"rustup toolchain add nightly\nrustup target add wasm32-unknown-unknown --toolchain nightly\n")),(0,i.kt)("h3",{id:"clone-gear-repo"},"Clone Gear repo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/gear-tech/gear.git\ncd gear\n")),(0,i.kt)("h3",{id:"compile"},"Compile"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cargo build -p gear-node --release\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"make node-release\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You can find the final build in directory ",(0,i.kt)("inlineCode",{parentName:"p"},"/gear/target/release/gear-node")),(0,i.kt)("p",{parentName:"div"},"Go to:"),(0,i.kt)("pre",{parentName:"div"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd target/release\n")))),(0,i.kt)("h2",{id:"run-gear-node"},"Run Gear Node"),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"It doesn't matter if you downloaded the prebuild binary or built it yourself. Being in the directory where the gear node is installed to run it without special arguments to get a node connected to the testnet:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./gear-node\n")),(0,i.kt)("p",null,"To run Gear node in dev mode use the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./gear-node --dev --tmp\n")),(0,i.kt)("h2",{id:"command-flags-and-options"},"Command Flags and Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-code"},"gear-node [flags] [options]\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"--staging")),(0,i.kt)("p",null,"Connect the node to Gear testnet."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"--dev")),(0,i.kt)("p",null,"Run standalone node of Gear network."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"--tmp")),(0,i.kt)("p",null,"Run node with a temporary storage. A temporary directory will be created to store the configuration and will be deleted at the end of the process."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"purge-chain")),(0,i.kt)("p",null,"Remove storage of the selected chain type. Needs to specify the chain connection type ",(0,i.kt)("inlineCode",{parentName:"p"},"--staging")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"--dev")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"--help")),(0,i.kt)("p",null,"For more information"),(0,i.kt)("h2",{id:"special-environment-variables"},"Special environment variables"),(0,i.kt)("p",null,"To run Gear node with logs from contracts use:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-code"},'RUST_LOG="gwasm=debug" gear-node [flags]\n')))}y.isMDXComponent=!0}}]);